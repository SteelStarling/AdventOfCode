package com.starling.advent2021.day5;

import java.util.Objects;
import java.lang.Integer;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.Map;

public class Point {

//    private static final Pattern xFind = Pattern.compile("^([0-9])");
//    private static final Pattern yFind = Pattern.compile("([0-9])$");

    private int x;
    private int y;

    /**
     * Converts a point string in format "x,y" to a point
     * @param input point string in format "x,y" (or x seperated by any non-digit y
     */
    public Point(String input) {
//        Matcher m = xFind.matcher(input);
//        this.x = Integer.parseInt(m.group(0));
//        m = yFind.matcher(input);
//        this.y = Integer.parseInt(m.group(0));
        String[] inputs = input.split("([^0-9])");
        this.x = Integer.parseInt(inputs[0]);
        this.y = Integer.parseInt(inputs[1]);
    }

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }

    @Override
    public String toString() {
        return x + ", " + y;
    }

    // Autogenerated by my beloved IntelliJ
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Point point = (Point) o;
        return getX() == point.getX() && getY() == point.getY();
    }

    // Autogenerated by my beloved IntelliJ
    @Override
    public int hashCode() {
        return Objects.hash(getX(), getY());
    }
}
